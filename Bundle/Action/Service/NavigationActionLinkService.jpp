#import (Config.path +'/Kernel/Service/MasterService') = MasterService;

class NavigationActionLinkService extends MasterService {

	initialize : function () {
		var parent = _super();
		
		this.onListen();
		return parent;
	}

	onListen : function (){
		var dispatcher = serviceLocator.get("Dispatcher");
		var	self = this;
		
		window.addEventListener('popstate', function(event, state) {
		 	console.log("popstate");
		 	console.log(event, state);
		 	self.change(event , {
		 		url : window.location.pathname.toString(),
		 		// template : 
		 	});
		 }, false);


		dispatcher.listen("Navigation:Link:onClick", this, this.change.bind(this));
	}

	change : function (event, data) {
		var router = serviceLocator.get("Router");
		var sm = serviceLocator.get("ServiceManager");
		var manageHistory = sm.get("navigation_history_link_service");
		var dispatcher = serviceLocator.get("Dispatcher");

		var title = sm.get('navigation_title_change_service');

		if(data == undefined || data.url == undefined )
			throw "url undefined , you can call this link//url";
		var route = router.match(data.url);

		dispatcher.trigger('Body:Content:change', {content : data.template});
		title.changeTitle(data.title);
		if (event.state == undefined && event.state != 0)
			manageHistory.pushState({ template : data.template }, data.url);
		else
			manageHistory.changeState(event.state)



	}
}